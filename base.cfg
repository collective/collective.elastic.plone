[buildout]
show-picked-versions = true
extensions =
    mr.developer
auto-checkout +=
    collective.elastic.ingest
always-checkout = true
sources-dir = devsrc

parts =
    instance
    test
    code-analysis
    coverage
    test-coverage
    createcoverage
    releaser
    i18ndude
    omelette
    plone-helper-scripts
develop =
    .


[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
environment-vars =
    zope_i18n_compile_mo_files true
    CELERY_BROKER redis://localhost:6379/0
    ELASTICSEARCH_QUERY_SERVER http://localhost:9200
    ELASTICSEARCH_QUERY_USE_SSL 0
    ELASTICSEARCH_INDEX plone
eggs =
    collective.elastic.plone
    redis


[code-analysis]
recipe = plone.recipe.codeanalysis[recommended]
multiprocessing = True
directory = ${buildout:directory}/src/collective
flake8-ignore = E241,E501,C812
check-manifest = True
return-status-codes = False


[omelette]
recipe = collective.recipe.omelette
eggs = ${test:eggs}


[test]
recipe = zc.recipe.testrunner
eggs =
    collective.elastic.plone [test]
initialization =
    os.environ['TZ'] = 'UTC'
defaults = ['-s', 'collective.elastic.plone', '--auto-color', '--auto-progress']

[coverage]
recipe = zc.recipe.egg
eggs = coverage


[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    export TZ=UTC
    ${buildout:directory}/bin/coverage run bin/test $*
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=90
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 100%.
output = ${buildout:directory}/bin/test-coverage
mode = 755


[createcoverage]
recipe = zc.recipe.egg
eggs = createcoverage


[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude

[plone-helper-scripts]
recipe = zc.recipe.egg
eggs =
   Products.CMFPlone
   ${instance:eggs}
interpreter = zopepy
scripts =
   zopepy
   plone-compile-resources

[versions]
# Don't use a released version of collective.elastic.plone
collective.elastic.plone =

[sources]
collective.elastic.ingest = git https://github.com/collective/collective.elastic.ingest.git pushurl=git@github.com:collective/collective.elastic.ingest.git
